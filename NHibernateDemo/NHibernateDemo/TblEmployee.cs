//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate template.
// Code is generated on: 2019/12/5 21:47:22
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace NHibernate.Model
{

    /// <summary>
    /// There are no comments for SunCreate.Vipf.Domain.TblEmployee, SunCreate.Vipf.Domain in the schema.
    /// </summary>
    [DataContract(IsReference = true,Namespace="http://www.suncreate.net/2013/arch")]
    public partial class TblEmployee:INotifyPropertyChanging, INotifyPropertyChanged, ICloneable {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _EmployeeId;

        private string _FirstName;

        private string _LastName;

        private int _Salary;
    
        #region Extensibility Method Definitions
        
        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();

        public override bool Equals(object obj)
        {
          TblEmployee toCompare = obj as TblEmployee;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.EmployeeId, toCompare.EmployeeId))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + EmployeeId.GetHashCode();
          return hashCode;
        }
        
        #endregion

        /// <summary>
        /// ʵ��ƽ̨����
        /// </summary>
        public new const string PlatformName = "TblEmployee";
        /// <summary>
        /// There are no comments for TblEmployee constructor in the schema.
        /// </summary>

    
        /// <summary>
        /// There are no comments for EmployeeId in the schema.
        /// </summary>
        [DataMember(Order=1)]
        public virtual int EmployeeId
        {
            get
            {
                return this._EmployeeId;
            }
            set
            {
                if (this._EmployeeId != value)
                {
                    this.SendPropertyChanging();
                    this._EmployeeId = value;
                    this.SendPropertyChanged("EmployeeId");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [DataMember(Order=2)]
        public virtual string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if (this._FirstName != value)
                {
                    this.SendPropertyChanging();
                    this._FirstName = value;
                    this.SendPropertyChanged("FirstName");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LastName in the schema.
        /// </summary>
        [DataMember(Order=3)]
        public virtual string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if (this._LastName != value)
                {
                    this.SendPropertyChanging();
                    this._LastName = value;
                    this.SendPropertyChanged("LastName");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Salary in the schema.
        /// </summary>
        [DataMember(Order=4)]
        public virtual int Salary
        {
            get
            {
                return this._Salary;
            }
            set
            {
                if (this._Salary != value)
                {
                    this.SendPropertyChanging();
                    this._Salary = value;
                    this.SendPropertyChanged("Salary");
                }
            }
        }
    
        #region ICloneable Members

        public virtual object Clone()
        {
            TblEmployee obj = new TblEmployee();
            obj.EmployeeId = EmployeeId;
            obj.FirstName = FirstName;
            obj.LastName = LastName;
            obj.Salary = Salary;
            return obj;
        }

        #endregion
   
        public virtual event PropertyChangingEventHandler PropertyChanging;

        public virtual event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
